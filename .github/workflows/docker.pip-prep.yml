name: create pip-prep Docker image 

on:
  push:
    paths:
    - 'package/docker/pip-prep/**'

  workflow_dispatch:

jobs:

  build:

    strategy:
      matrix:
        distro: [centos7, centos8]
        archtype: [multiarch, amd64, arm64]

    runs-on: ubuntu-latest

    steps:

      - name: Define variables - archsuffix and platforms
        id: var
        run: |
          case ${{ matrix.archtype }} in
          multiarch)
            archsuffix=
            platforms=linux/amd64,linux/arm64
            ;;
          *)
            archsuffix=-${{ matrix.archtype }}
            platforms=linux/${{ matrix.archtype }}
            ;;
          esac
          echo "::set-output name=archsuffix::$archsuffix"
          echo "::set-output name=platforms::$platforms"
           
      - name: checkout
        uses: actions/checkout@v2

      - name: Setup QEMU user-mode emulation
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: ${{ steps.var.outputs.platforms }}
          file: package/docker/pip-prep/${{ matrix.distro }}/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USER }}/pip-prep:${{ matrix.distro }}${{ steps.var.outputs.archsuffix }}
          push: true

  dispatch:

    needs: build

    strategy:
      matrix:
        repo: ['${{ github.repository_owner }}/PiP-glibc' ]

    runs-on: ubuntu-latest

    steps:

      - name: dispatch event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PIP_BUILD_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: pip-prep-docker-built
